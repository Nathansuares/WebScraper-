modifier_and_type,method,description
"Map.Entry<K,V>",ceilingEntry(Kkey),"Returns a key-value mapping associated with the least key
 greater than or equal to the given key, ornullif
 there is no such key."
K,ceilingKey(Kkey),"Returns the least key greater than or equal to the given key,
 ornullif there is no such key."
void,clear(),Removes all of the mappings from this map.
Object,clone(),Returns a shallow copy of thisTreeMapinstance.
Comparator<? superK>,comparator(),"Returns the comparator used to order the keys in this map, ornullif this map uses thenatural orderingof its keys."
boolean,containsKey(Objectkey),"Returnstrueif this map contains a mapping for the specified
 key."
boolean,containsValue(Objectvalue),"Returnstrueif this map maps one or more keys to the
 specified value."
NavigableSet<K>,descendingKeySet(),Returns a reverse orderNavigableSetview of the keys contained in this map.
"NavigableMap<K,V>",descendingMap(),Returns a reverse order view of the mappings contained in this map.
"Set<Map.Entry<K,V>>",entrySet(),Returns aSetview of the mappings contained in this map.
"Map.Entry<K,V>",firstEntry(),"Returns a key-value mapping associated with the least
 key in this map, ornullif the map is empty."
K,firstKey(),Returns the first (lowest) key currently in this map.
"Map.Entry<K,V>",floorEntry(Kkey),"Returns a key-value mapping associated with the greatest key
 less than or equal to the given key, ornullif there
 is no such key."
K,floorKey(Kkey),"Returns the greatest key less than or equal to the given key,
 ornullif there is no such key."
void,"forEach(BiConsumer<? superK,? superV> action)","Performs the given action for each entry in this map until all entries
 have been processed or the action throws an exception."
V,get(Objectkey),"Returns the value to which the specified key is mapped,
 ornullif this map contains no mapping for the key."
"SortedMap<K,V>",headMap(KtoKey),"Returns a view of the portion of this map whose keys are
 strictly less thantoKey."
"NavigableMap<K,V>","headMap(KtoKey,
       boolean inclusive)","Returns a view of the portion of this map whose keys are less than (or
 equal to, ifinclusiveis true)toKey."
"Map.Entry<K,V>",higherEntry(Kkey),"Returns a key-value mapping associated with the least key
 strictly greater than the given key, ornullif there
 is no such key."
K,higherKey(Kkey),"Returns the least key strictly greater than the given key, ornullif there is no such key."
Set<K>,keySet(),Returns aSetview of the keys contained in this map.
"Map.Entry<K,V>",lastEntry(),"Returns a key-value mapping associated with the greatest
 key in this map, ornullif the map is empty."
K,lastKey(),Returns the last (highest) key currently in this map.
"Map.Entry<K,V>",lowerEntry(Kkey),"Returns a key-value mapping associated with the greatest key
 strictly less than the given key, ornullif there is
 no such key."
K,lowerKey(Kkey),"Returns the greatest key strictly less than the given key, ornullif there is no such key."
NavigableSet<K>,navigableKeySet(),Returns aNavigableSetview of the keys contained in this map.
"Map.Entry<K,V>",pollFirstEntry(),"Removes and returns a key-value mapping associated with
 the least key in this map, ornullif the map is empty."
"Map.Entry<K,V>",pollLastEntry(),"Removes and returns a key-value mapping associated with
 the greatest key in this map, ornullif the map is empty."
V,"put(Kkey,Vvalue)",Associates the specified value with the specified key in this map.
void,"putAll(Map<? extendsK,? extendsV> map)",Copies all of the mappings from the specified map to this map.
V,remove(Objectkey),Removes the mapping for this key from this TreeMap if present.
V,"replace(Kkey,Vvalue)","Replaces the entry for the specified key only if it is
 currently mapped to some value."
boolean,"replace(Kkey,VoldValue,VnewValue)","Replaces the entry for the specified key only if currently
 mapped to the specified value."
void,"replaceAll(BiFunction<? superK,? superV,? extendsV> function)","Replaces each entry's value with the result of invoking the given
 function on that entry until all entries have been processed or the
 function throws an exception."
int,size(),Returns the number of key-value mappings in this map.
"NavigableMap<K,V>","subMap(KfromKey,
      boolean fromInclusive,KtoKey,
      boolean toInclusive)",Returns a view of the portion of this map whose keys range fromfromKeytotoKey.
"SortedMap<K,V>","subMap(KfromKey,KtoKey)","Returns a view of the portion of this map whose keys range fromfromKey, inclusive, totoKey, exclusive."
"SortedMap<K,V>",tailMap(KfromKey),"Returns a view of the portion of this map whose keys are
 greater than or equal tofromKey."
"NavigableMap<K,V>","tailMap(KfromKey,
       boolean inclusive)","Returns a view of the portion of this map whose keys are greater than (or
 equal to, ifinclusiveis true)fromKey."
Collection<V>,values(),Returns aCollectionview of the values contained in this map.
